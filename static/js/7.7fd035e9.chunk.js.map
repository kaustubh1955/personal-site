{"version":3,"sources":["components/Contact/EmailLink.js","pages/Contact.js"],"names":["validateText","text","test","length","messages","EmailLink","useState","idx","updateIter","message","updateMessage","char","updateChar","isActive","setIsActive","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","newIdx","newChar","slice","className","style","color","onMouseEnter","onMouseLeave","href","Contact","Main","title","description","to","ContactIcons"],"mappings":"2KAGMA,EAAe,SAACC,GAIpB,MADW,mEACDC,KAAKD,IAAyB,IAAhBA,EAAKE,QAGzBC,EAAW,CAAC,gBA+DHC,EA3CG,WAChB,IAGA,EAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAiCF,mBAASF,EAASG,IAAnD,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAA2BJ,mBAASF,EAASG,GAAKJ,QAAlD,mBAAOQ,EAAP,KAAaC,EAAb,KACA,EAAgCN,oBAAS,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KAqBA,OA9CkB,SAACC,EAAUC,GAC7B,IAAMC,EAAgBC,mBAEtBC,qBAAU,WACRF,EAAcG,QAAUL,IACvB,CAACA,IAEJI,qBAAU,WACR,GAAIH,EAAO,CACT,IAAMK,EAAKC,aAAY,WACrBL,EAAcG,YACbJ,GACH,OAAO,kBAAMO,cAAcF,IAE7B,OAAO,eACN,CAACL,IAYJQ,EACE,WACE,IAAIC,EAASlB,EACTmB,EAAUf,EACVA,EAZK,IAYUP,EAASG,GAAKJ,SAC/BsB,GAAU,EACVC,EAAU,GAERD,IAAWrB,EAASD,OACtBW,GAAY,IAEZJ,EAAcN,EAASqB,GAAQE,MAAM,EAAGD,IACxClB,EAAWiB,GACXb,EAAWc,EAAU,MAGzBb,EAvBY,GAuBO,MAInB,qBACEe,UAAU,mBACVC,MAAO7B,EAAaS,GAAW,GAAK,CAAEqB,MAAO,OAC7CC,aAAc,kBAAMjB,GAAY,IAChCkB,aAAc,kBAAMzB,EAAMH,EAASD,QAAUW,GAAY,IAJ3D,SAME,oBAAGmB,KAAMjC,EAAaS,GAAb,iBAAkCA,EAAlC,cAAwD,GAAjE,UACE,+BAAOA,IACP,oD,QCvCOyB,UAtBC,kBACd,cAACC,EAAA,EAAD,CACEC,MAAM,UACNC,YAAY,8DAFd,SAIE,0BAAST,UAAU,OAAOP,GAAG,UAA7B,UACE,iCACE,qBAAKO,UAAU,QAAf,SACE,oBAAI,cAAY,UAAhB,SACE,cAAC,IAAD,CAAMU,GAAG,WAAT,2BAIN,sBAAKV,UAAU,WAAf,UACE,iFACA,cAAC,EAAD,OAEF,cAACW,EAAA,EAAD","file":"static/js/7.7fd035e9.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\n// Validates the first half of an email address.\r\nconst validateText = (text) => {\r\n  // NOTE: Passes RFC 5322 but not tested on google's standard.\r\n  // eslint-disable-next-line no-useless-escape\r\n  const re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))$/;\r\n  return re.test(text) || text.length === 0;\r\n};\r\n\r\nconst messages = [\"kaustubh1955\"];\r\n\r\nconst useInterval = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    if (delay) {\r\n      const id = setInterval(() => {\r\n        savedCallback.current();\r\n      }, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n    return () => {}; // pass linter\r\n  }, [delay]);\r\n};\r\n\r\nconst EmailLink = () => {\r\n  const hold = 50; // ticks to wait after message is complete before rendering next message\r\n  const delay = 50; // tick length in mS\r\n\r\n  const [idx, updateIter] = useState(0); // points to current message\r\n  const [message, updateMessage] = useState(messages[idx]);\r\n  const [char, updateChar] = useState(messages[idx].length); // points to current char\r\n  const [isActive, setIsActive] = useState(true); // disable when all messages are printed\r\n\r\n  useInterval(\r\n    () => {\r\n      let newIdx = idx;\r\n      let newChar = char;\r\n      if (char - hold >= messages[idx].length) {\r\n        newIdx += 1;\r\n        newChar = 0;\r\n      }\r\n      if (newIdx === messages.length) {\r\n        setIsActive(false);\r\n      } else {\r\n        updateMessage(messages[newIdx].slice(0, newChar));\r\n        updateIter(newIdx);\r\n        updateChar(newChar + 1);\r\n      }\r\n    },\r\n    isActive ? delay : null\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className=\"inline-container\"\r\n      style={validateText(message) ? {} : { color: \"red\" }}\r\n      onMouseEnter={() => setIsActive(false)}\r\n      onMouseLeave={() => idx < messages.length && setIsActive(true)}\r\n    >\r\n      <a href={validateText(message) ? `mailto:${message}@gmail.com` : \"\"}>\r\n        <span>{message}</span>\r\n        <span>@gmail.com</span>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailLink;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ContactIcons from \"../components/Contact/ContactIcons\";\r\nimport EmailLink from \"../components/Contact/EmailLink\";\r\nimport Main from \"../layouts/Main\";\r\n\r\nconst Contact = () => (\r\n  <Main\r\n    title=\"Contact\"\r\n    description=\"Contact Kaustubh Dwivedi via email @ kaustubh1955@gmail.com\"\r\n  >\r\n    <article className=\"post\" id=\"contact\">\r\n      <header>\r\n        <div className=\"title\">\r\n          <h2 data-testid=\"heading\">\r\n            <Link to=\"/contact\">Contact</Link>\r\n          </h2>\r\n        </div>\r\n      </header>\r\n      <div className=\"email-at\">\r\n        <p>Feel free to get in touch. You can email me at: </p>\r\n        <EmailLink />\r\n      </div>\r\n      <ContactIcons />\r\n    </article>\r\n  </Main>\r\n);\r\n\r\nexport default Contact;\r\n"],"sourceRoot":""}